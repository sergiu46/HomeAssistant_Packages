# Version: 2023.04.2
#
# Package - Updates Available
# List all available updates of entities with device class update
#
# You must set in secrets.yaml
# notify_service_updates: "notify.notify"
# delay_notify_updates: "24:00:00"
#
# If you want to exlcude entities create group ignored_updates in groups.yaml
#
# Example:
# ignored_updates:
#   entities:
#     - binary_sensor.updater

script:
  # Script to update this package from GitHub
  update_packages:
    sequence:
      - service: downloader.download_file
        data:
          overwrite: true
          url: >-
            {% set url = 'https://raw.githubusercontent.com/' %}
            {% set account = states('input_text.packages_account') %}
            {% set file_path = '/HomeAssistant_Packages/main/packages/updates_available.yaml' %}
            {{ url + account + file_path }}

group:
  ignored_updates:
    name: "|| Ignored Updates"
    entities: []

  turn_off_automations:
    entities:
      - automation.updates_available
      - automation.updates_in_progress

template:
  - trigger:
      - platform: time_pattern
        seconds: "/1"
    sensor:
      - name: "|| Updates Available"
        icon: "hass:update"
        state: >
              {% set result = namespace(updates=[]) %}
                {% for state in states.update 
                  | selectattr('state', '==', 'on')
                  |rejectattr('entity_id','in',state_attr('group.ignored_updates','entity_id')) 
                %}
                    {% set result.updates 
                      = result.updates + [state.name 
                      ~ ' (' ~ state.attributes.installed_version ~ ' -> ' 
                      ~ state.attributes.latest_version ~ ')'] 
                    %}
                {% endfor %}
                {% for state in states.binary_sensor
                  |selectattr('attributes.device_class', 'defined')
                  |selectattr('attributes.device_class', '==', 'update')
                  |selectattr('state', 'eq', 'on')
                  |rejectattr('entity_id','in',state_attr('group.ignored_updates','entity_id')) 
                %}
                    {% set result.updates = result.updates + [state.name ] %}
                {% endfor %}
              {{ result.updates|count }}
        attributes:
            names: >
              {% set result = namespace(updates=[]) %}
                {% for state in states.update 
                  | selectattr('state', '==', 'on')
                  |rejectattr('entity_id','in',state_attr('group.ignored_updates','entity_id')) 
                %}
                    {% set result.updates 
                      = result.updates + [state.name 
                      ~ ' (' ~ state.attributes.installed_version ~ ' -> ' 
                      ~ state.attributes.latest_version ~ ')'] 
                    %}
                {% endfor %}
                {% for state in states.binary_sensor
                  |selectattr('attributes.device_class', 'defined')
                  |selectattr('attributes.device_class', '==', 'update')
                  |selectattr('state', 'eq', 'on')
                  |rejectattr('entity_id','in',state_attr('group.ignored_updates','entity_id')) 
                %}
                    {% set result.updates = result.updates + [state.name ] %}
                {% endfor %}
              {{ result.updates|join (', ') }}
      - name: "|| Updates in Progress"
        icon: "hass:update"
        state: >
              {{ states.update
                |selectattr('attributes.in_progress','defined')
                |selectattr('attributes.in_progress','true')
                |list|count
              }}
        attributes:
            names: >
              {{ states.update
                |selectattr('attributes.in_progress','defined')
                |selectattr('attributes.in_progress','true')
                |map(attribute='name')|join (", ")
              }}

input_boolean:
  update_available_alert:
    name: "|| Update Available Alert"
    icon: "hass:alert-circle"
  update_in_progress_alert:
    name: "|| Update in Progress Alert"
    icon: "hass:alert-circle"

timer:
  updates_available:
    name: '|| Updates Available Timer'
    duration: !secret delay_notify_updates
    restore: true

automation:
  # Notify when updates are available
  - id: "updates_available"
    alias: "|| Updates Available"
    description: ""
    trigger:
      - platform: state
        entity_id: sensor.updates_available
        id: UPDATES_AVAILABLE
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.updates_available
        id: TIMER_END
    condition: []
    action:
      - if:
        - condition: trigger
          id: UPDATES_AVAILABLE
        then:
          - choose:
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.updates_available
                    above: 0
                sequence:
                  - service: timer.start
                    data: 
                      duration: !secret delay_notify_updates
                    target:
                      entity_id: timer.updates_available
              - conditions:
                  - condition: numeric_state
                    entity_id: sensor.updates_available
                    below: 1
                sequence:
                  - service: timer.cancel
                    data: {}
                    target:
                      entity_id: timer.updates_available
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.updates_available
                above: "0"
                below: "2"
              - condition: trigger
                id: TIMER_END
            sequence:
              - service: !secret notify_service_updates
                data:
                  message: >
                    ⚙️ Este o actualizare disponibilă:
    
                    – {{ state_attr('sensor.updates_available','names').split(',') |
                    join('
    
                    –') }}
                  data:
                    disable_notification: true
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.update_available_alert
                data: {}
                enabled: true
          - conditions:
              - condition: numeric_state
                entity_id: sensor.updates_available
                above: "1"
              - condition: trigger
                id: TIMER_END
            sequence:
              - service: !secret notify_service_updates
                data:
                  message: >
                    ⚙️ Sunt {{ states('sensor.updates_available')|int }} actualizări
                    disponibile:
    
                    – {{ state_attr('sensor.updates_available','names').split(',') |
                    join('
    
                    –') }}
                  data:
                    disable_notification: true
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.update_available_alert
                data: {}
                enabled: true
          - conditions:
              - condition: numeric_state
                entity_id: sensor.updates_available
                below: "1"
              - condition: state
                entity_id: input_boolean.update_available_alert
                state: "on"
                enabled: true
            sequence:
              - service: !secret notify_service_updates
                data:
                  message: 🎉 Dispozitivele și serviciile sunt actualizate!
                  data:
                    disable_notification: true
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.update_available_alert
                data: {}
                enabled: true
        default: []
    mode: restart


# Notify when updates are in progress
  - id: "updates_in_progress"
    alias: "|| Updates in Progress"
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.updates_in_progress
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: input_boolean.maintenance_mode
        state: "off"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.updates_in_progress
                state: unknown
            sequence: []
          - conditions:
              - condition: numeric_state
                entity_id: sensor.updates_in_progress
                above: '0'
                below: '2'
            sequence:
              - delay: 00:00:10
              - service: !secret notify_service_updates
                data:
                  message: |
                    🔧 Este o actualizare în progress:
                    – {{ state_attr('sensor.updates_in_progress','names').split(',') | join('
                    –') }}
                  data:
                    disable_notification: True
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.update_in_progress_alert
          - conditions:
              - condition: numeric_state
                entity_id: sensor.updates_in_progress
                above: '1'
            sequence:
              - delay: 00:00:10
              - service: !secret notify_service_updates
                data:
                  message: |
                    🔧 Sunt {{ states('sensor.updates_in_progress')|int }} actualizări în progress:
                    – {{ state_attr('sensor.updates_in_progress','names').split(',') | join('
                    –') }}
                  data:
                    disable_notification: True
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.update_in_progress_alert
          - conditions:
              - condition: numeric_state
                entity_id: sensor.updates_in_progress
                below: '1'
              - condition: state
                entity_id: input_boolean.update_in_progress_alert
                state: 'on'
            sequence:
              - service: !secret notify_service_updates
                data:
                  message: "🎉 Actualizare finalizată!"
                  data:
                    disable_notification: True
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.update_in_progress_alert
        default: []
