# Version: 2023.10.1
# Low Batteries Package
#
# Count and list of entities device class battery with the value under 20
#
# To change the delay of low battery notifications create a input number helper named: "ΙΙ Delay Notifiy Batteries"
# and set the number of minutes to wait until send the notification
#
# To change the notification service create an input text helper named: "ΙΙ Notify Service Batteries"
# and put inside the name of the service you want. 
#
# If you want to exlcude entities create an imput select helper named: "ΙΙ Ignored Batteries" 
# and add all entity id's that you want to exclude as options.
#

script:
  # Script to update this package from GitHub
  update_packages:
    sequence:
      - service: downloader.download_file
        data:
          overwrite: true
          url: >-
            {% set url = 'https://raw.githubusercontent.com/' %}
            {% if states.input_text.packages_account.state is defined %}
              {% set account = states('input_text.packages_account') %}
            {% else %}
              {% set account = 'topaniot' %}
            {% endif %}
            {% set path = '/HomeAssistant_Packages/main/packages/' %}
            {% set name = 'low_battery.yaml' %}
            {{ url + account + path + name }}
   
   
group:
  turn_off_automations:
    entities:
      - automation.low_batteries


template:
  - trigger:
      - platform: time_pattern
        seconds: "/1"
    sensor:
      - name: "ΙΙ Low Batteries"
        icon: "hass:battery-alert-variant-outline"
        state: >
              {% if states.input_select.ignored_batteries.state is defined %}
                {% set ignored = state_attr('input_select.ignored_batteries','options') %}
              {% else %}
                {% set ignored = [] %}
              {% endif %}
                    
              {% if states.input_number.battery_level_threshold.state is defined %}
                {% set threshold = states('input_number.battery_level_threshold') | int %}
              {% else %}
                {% set threshold = 20 %}
              {% endif %}
              
              {% set result = namespace(sensors=[]) %}
              {% for state in states.sensor 
                |selectattr('attributes.device_class', 'defined')
                |selectattr('attributes.device_class', '==', 'battery')
                |rejectattr('entity_id','in', ignored) 
              %}
              {% if 0 <= state.state | int (-1) < threshold | int  %}
                {% set result.sensors = result.sensors + [state.name ~ ' (' ~ state.state ~ '%)'] %}
              {% endif %}
              {% endfor %}
              {{ result.sensors|count }}
        attributes:
            names: >
              {% if states.input_select.ignored_batteries.state is defined %}
                {% set ignored = state_attr('input_select.ignored_batteries','options') %}
              {% else %}
                {% set ignored = [] %}
              {% endif %}
                    
              {% if states.input_number.battery_level_threshold.state is defined %}
                {% set threshold = states('input_number.battery_level_threshold') | int %}
              {% else %}
                {% set threshold = 20 %}
              {% endif %}
              
              {% set result = namespace(sensors=[]) %}
              {% for state in states.sensor 
                |selectattr('attributes.device_class', 'defined')
                |selectattr('attributes.device_class', '==', 'battery')
                |rejectattr('entity_id','in', ignored) 
              %}
              {% if 0 <= state.state | int (-1) < threshold | int  %}
                {% set result.sensors = result.sensors + [state.name ~ ' (' ~ state.state ~ '%)'] %}
              {% endif %}
              {% endfor %}
              {{ result.sensors|join (', ') }}

input_boolean:
  low_batteries_alert:
    name: "ΙΙ Low Batteries Alert"
    icon: "hass:alert-circle"

automation:
  - id: "low_batteries"
    alias: "ΙΙ Low Batteries"
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.low_batteries
        to: ~
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.low_batteries
                state: unknown
            sequence: []
          - conditions:
              - condition: numeric_state
                entity_id: sensor.low_batteries
                above: '0'
                below: '2'
            sequence:
              - delay: 
                  minutes: >-
                    {% if states.input_number.delay_notify_batteries.state is defined %}
                      {% set minutes = states('input_number.delay_notify_batteries') | int %}
                    {% else %}
                      {% set minutes = 10 %}
                    {% endif %}
                    {{ minutes }}
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.low_batteries_alert
              - service: >-
                  {% if states.input_text.notify_service_batteries.state is defined %}
                    {% set notify_service = states('input_text.notify_service_batteries') %}
                  {% else %}
                    {% set notify_service = 'notify' %}
                  {% endif %}
                  {{ "notify." + notify_service }}
                data:
                  message: |
                    ⚠️ Este un dispozitiv cu baterie descărcată:
                    – {{ state_attr('sensor.low_batteries','names').split(',') | join('
                    –') }}
          - conditions:
              - condition: numeric_state
                entity_id: sensor.low_batteries
                above: '1'
            sequence:
              - delay: 
                  minutes: >-
                    {% if states.input_number.delay_notify_batteries.state is defined %}
                      {% set minutes = states('input_number.delay_notify_batteries') | int %}
                    {% else %}
                      {% set minutes = 10 %}
                    {% endif %}
                    {{ minutes }}
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.low_batteries_alert
              - service: >-
                  {% if states.input_text.notify_service_batteries.state is defined %}
                    {% set notify_service = states('input_text.notify_service_batteries') %}
                  {% else %}
                    {% set notify_service = 'notify' %}
                  {% endif %}
                  {{ "notify." + notify_service }}
                data:
                  message: |
                    ⚠️ Sunt {{ states('sensor.low_batteries') | int }} dispozitive cu bateria descărcată:
                    – {{ state_attr('sensor.low_batteries','names').split(',') | join('
                    –') }}
          - conditions:
              - condition: numeric_state
                entity_id: sensor.low_batteries
                below: '1'
              - condition: state
                entity_id: input_boolean.low_batteries_alert
                state: 'on'
            sequence:
              - delay: >-
                    {% if states.input_number.delay_notify_batteries.state is defined %}
                      {% set minutes = states('input_number.delay_notify_batteries') | int %}
                    {% else %}
                      {% set minutes = 10 %}
                    {% endif %}
                    {{ minutes }}
              - service: >-
                  {% if states.input_text.notify_service_batteries.state is defined %}
                    {% set notify_service = states('input_text.notify_service_batteries') %}
                  {% else %}
                    {% set notify_service = 'notify' %}
                  {% endif %}
                  {{ "notify." + notify_service }}
                data:
                  message: |
                    🔋 Starea bateriilor este bună!
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.low_batteries_alert
        default: []
