# Version: 2023.03.01-1
# Package - Low Batteries
# Count and list of entities device class battery with the value under 30
#
# You must set in secrets.yaml
# notify_service_battery: notify.notify
# delay: !secret delay_notify_problems
# If you want to exlcude entities create group ignored_entities in groups.yaml
#
# Example:
#  ignored_batteries:
#    entities:
#       - sensor.iphone_battery_level

script:
  # Script to update this package from GitHub
  update_packages:
    sequence:
      - service: downloader.download_file
        data:
          overwrite: true
          url: >-
            https://raw.githubusercontent.com/topaniot/HomeAssistant_Packages/main/packages/low_battery.yaml

group:
  ignored_batteries:
    name: "|| Ignored Batteries"
    entities: []

  turn_off_automations:
    entities:
      - automation.low_batteries


template:
  - trigger:
      - platform: time_pattern
        seconds: "/1"
    sensor:
      - name: "|| Low Batteries"
        icon: "hass:battery-alert-variant-outline"
        state: >
              {% set threshold = 20 %}
              {% set result = namespace(sensors=[]) %}
              {% for state in states.sensor 
                |selectattr('attributes.device_class', 'defined')
                |selectattr('attributes.device_class', '==', 'battery')
                |rejectattr('entity_id','in',state_attr('group.ignored_batteries','entity_id')) 
              %}
                {% if 0 <= state.state | int (-1) < threshold | int  %}
                  {% set result.sensors = result.sensors + [state.name ~ ' (' ~ state.state ~ '%)'] %}
                {% endif %}
              {% endfor %}
              {{ result.sensors|count }}
        attributes:
            names: >
              {% set threshold = 20 %}
              {% set result = namespace(sensors=[]) %}
              {% for state in states.sensor 
                |selectattr('attributes.device_class', 'defined')
                |selectattr('attributes.device_class', '==', 'battery')
                |rejectattr('entity_id','in',state_attr('group.ignored_batteries','entity_id')) 
              %}
                {% if 0 <= state.state | int (-1) < threshold | int  %}
                  {% set result.sensors = result.sensors + [state.name ~ ' (' ~ state.state ~ '%)'] %}
                {% endif %}
              {% endfor %}
              {{ result.sensors|join (', ') }}

input_boolean:
  low_batteries_alert:
    name: "|| Low Batteries Alert"
    icon: "hass:alert-circle"

automation:
  - id: "low_batteries"
    alias: "|| Low Batteries"
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.low_batteries
        to: ~
      - platform: homeassistant
        event: start
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: sensor.low_batteries
                state: unknown
            sequence: []
          - conditions:
              - condition: numeric_state
                entity_id: sensor.low_batteries
                above: '0'
                below: '2'
            sequence:
              - delay: !secret delay_notify_problems
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.low_batteries_alert
              - service: !secret notify_service_battery
                data:
                  message: |
                    ⚠️ Este un dispozitiv cu baterie descărcată:
                    – {{ state_attr('sensor.low_batteries','names').split(',') | join('
                    –') }}
          - conditions:
              - condition: numeric_state
                entity_id: sensor.low_batteries
                above: '1'
            sequence:
              - delay: !secret delay_notify_problems
              - service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.low_batteries_alert
              - service: !secret notify_service_battery
                data:
                  message: |
                    ⚠️ Sunt {{ states('sensor.low_batteries')|int }} dispozitive cu bateria descărcată:
                    – {{ state_attr('sensor.low_batteries','names').split(',') | join('
                    –') }}
          - conditions:
              - condition: numeric_state
                entity_id: sensor.low_batteries
                below: '1'
              - condition: state
                entity_id: input_boolean.low_batteries_alert
                state: 'on'
            sequence:
              - service: !secret notify_service_battery
                data:
                  message: |
                    🔋 Starea bateriilor este bună!
              - service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.low_batteries_alert
        default: []
