# Package Server
# Version: 2023.04.13-2
# This package includes default integrations, automations 
# and sersors for server activity.

script:
  # Script to update this package from GitHub
  update_packages:
    alias: "|| Update Packages"
    sequence:
      - service: downloader.download_file
        data:
          overwrite: true
          url: >-
            {% set url = 'https://raw.githubusercontent.com/' %}
            {% set account = states('input_text.packages_account') %}
            {% set file_path = '/HomeAssistant_Packages/main/packages/server.yaml' %}
            {{ url + account + file_path }}

input_text:
  packages_account:
    name: '|| Packages Account'
    initial: !secret packages_account


http:
  ip_ban_enabled: true
  login_attempts_threshold: 15
  # Setup NGINX
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.30.33.0/24

downloader:
  download_dir: packages

recorder:
  # db_url: !secret recorder_db_url
  purge_keep_days: !secret recorder_keep_days
  exclude:
    entities:
      - automation.healthchecks

rest_command:
  # monitor server with healthchecks.io
  healthchecks:
    url: !secret healthchecks

#Telegram bot
telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids: !secret telegram_allowed_chat_ids

notify:
    # Telegram notify
  - platform: telegram
    name: tiot_telegram
    chat_id: !secret telegram_notify_chat_id

sensor:
    # RPI sensors
  - platform: systemmonitor
    resources:
      - type: processor_use
      - type: swap_use_percent
      - type: processor_temperature
      - type: load_15m
      - type: memory_use_percent
      - type: disk_use_percent
        arg: /
      - type: disk_use
        arg: /

homeassistant:
  customize:
    sensor.processor_temperature:
      friendly_name: "|| Processor Temperature"
    sensor.processor_use:
      friendly_name: "|| Processor Use"
    sensor.load_15m:
      friendly_name: "|| Load (15m)"
    sensor.memory_use_percent:
      friendly_name: "|| Memory Use"
    sensor.swap_use_percent:
      friendly_name: "|| Swap Use"
    binary_sensor.rpi_power_status:
      friendly_name: "|| RPi Power Status"
    sensor.disk_use:
      friendly_name: "|| Disk Use"
    sensor.disk_use_percent:
      friendly_name: "|| Disk Use Percent"

logbook:
  exclude:
    entity_globs:
      # Exclude Load Sensors
      - sensor.*_load_*
      - sensor.load_*

group:
  turn_off_automations:
    name: "|| Turn OFF Automations"
    entities: []

automation:
    # Update Packages on server STOP
  - id: 'update_on_server_stop'
    alias: "|| Update Packages on STOP"
    description: ''
    trigger:
    - platform: homeassistant
      event: shutdown
    condition: []
    action:
    - service: script.turn_on
      target:
        entity_id: script.update_packages
    mode: single
    # Notify on server start using defined service
  - id: 'server_start'
    alias: "|| Server Start"
    description: ''
    trigger:
    - platform: homeassistant
      event: start
    condition: []
    action:
    - service: !secret notify_service_server
      data:
        message: ‚ñ∂Ô∏è Serverul a pornit!
    mode: single

    # Notify on server Stop using defined service
  - id: 'server_stop'
    alias: "|| Server Stop"
    description: ''
    trigger:
    - platform: homeassistant
      event: shutdown
    condition: []
    action:
    - service: !secret notify_service_server
      data:
        message: ‚èπÔ∏è Serverul s-a oprit!
    mode: single

    # Ping healthchecks.io every minute
  - id: 'healthchecks_update'
    alias: "|| HealthChecks"
    description: ''
    trigger:
      - platform: time_pattern
        minutes: /1
    condition: []
    action:
      - service: rest_command.healthchecks
    mode: restart

    # Notificare periodicƒÉ
  - id: 'life_bit'
    alias: "|| Life Bit"
    description: ''
    trigger:
      - platform: time
        at: '11:00'
    condition:
      - condition: time
        weekday:
          - thu
    action:
      - service: !secret notify_service_server
        data:
          message: "Notificare periodicƒÉ Joi 11:00"
          data:
            disable_notification: True
    mode: single
    max_exceeded: silent

    # Reload things after script update_packages is run
  - id: 'update_packages'
    alias: "|| Update Packages"
    description: ''
    trigger:
      - platform: state
        entity_id: script.update_packages
        from: 'on'
        to: 'off'
    condition: []
    action:
      - service: automation.turn_off
        target:
          entity_id: group.turn_off_automations
      - service: input_boolean.reload
      - service: input_number.reload
      - service: template.reload
      - service: group.reload
      - service: script.reload
      - service: homeassistant.reload_core_config
      - service: automation.turn_on
        target:
          entity_id: group.turn_off_automations
      - service: automation.reload
    mode: restart

    # Notify when CPU load 15m is above 4 and when goes back below 3
  - id: 'cpu_load_15m'
    alias: "|| CPU Load"
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.load_15m
        above: '4'
    condition: []
    action:
      - service: !secret notify_service_server
        data:
          message: "üü° CPU Load (15m) = {{ states('sensor.load_15m') }}"
      - wait_template: "{{ states( 'sensor.load_15m' ) | float < 3 }}"
      - service: !secret notify_service_server
        data:
          message: "üü¢ CPU Load (15m) = {{ states('sensor.load_15m') }}"
    mode: single
    max_exceeded: silent

    # Notify when CPU Temperature is high
  - id: 'cpu_temp'
    alias: "|| CPU Temperature"
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.processor_temperature
        above: '80'
    condition: []
    action:
      - service: !secret notify_service_server
        data:
          message: "üü° CPU Temp. = {{ states('sensor.processor_temperature') }}¬∞C"
      - wait_template: "{{ states( 'sensor.processor_temperature' ) | float < 70 }}"
      - service: !secret notify_service_server
        data:
          message: "üü¢ CPU Temp. = {{ states('sensor.processor_temperature') }}¬∞C"
    mode: single
    max_exceeded: silent

    # Notify when RAM is almost full
  - id: 'ram_usage'
    alias: "|| RAM Usage"
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.memory_use_percent
        above: '85'
    condition: []
    action:
      - service: !secret notify_service_server
        data:
          message: "üü° RAM = {{ states('sensor.memory_use_percent') }}%"
      - wait_template: "{{ states( 'sensor.memory_use_percent' ) | float < 80 }}"
      - service: !secret notify_service_server
        data:
          message: "üü¢ RAM = {{ states('sensor.memory_use_percent') }}%"
    mode: single
    max_exceeded: silent

    # Notify when storage is almost full
  - id: 'disk_usage'
    alias: "|| Disk Usage"
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sensor.disk_use_percent
        above: '70'
    condition: []
    action:
      - service: !secret notify_service_server
        data:
          message: "üü° Disk = {{ states('sensor.disk_use_percent') }}%"
      - wait_template: "{{ states( 'sensor.disk_use_percent' ) | float < 60 }}"
      - service: !secret notify_service_server
        data:
          message: "üü¢ Disk = {{ states('sensor.disk_use_percent') }}%"
    mode: restart
    
    # Restart NginX addon weekly
  - id: restart_nginx_addon
    alias: "|| Restart NginX Addon"
    description: ""
    trigger:
      - platform: time
        at: "05:00:00"
    condition:
      - condition: time
        weekday:
          - fri
    action:
      - if:
          - condition: template
            value_template: >-
              {{ states('update.nginx_home_assistant_ssl_proxy_update') is defined }}
        then:
          - service: hassio.addon_restart
            data:
              addon: core_nginx_proxy
    mode: restart


